"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
// (C) 2007-2018 GoodData Corporation
var util_1 = require("../util");
exports.ROOT = "/gdc/admin";
exports.CONTRACTS = exports.ROOT + "/contracts";
exports.CONTRACT = exports.CONTRACTS + "/:contractId";
exports.CONTRACT_DATA_PRODUCTS = exports.CONTRACT + "/dataproducts";
exports.CONTRACT_DATA_PRODUCT = exports.CONTRACT_DATA_PRODUCTS + "/:dataProductId";
exports.CONTRACT_DATA_PRODUCT_DOMAIN_DATA_PRODUCTS = exports.CONTRACT_DATA_PRODUCT + "/domaindataproducts";
exports.CONTRACT_DATA_PRODUCT_DOMAIN_DATA_PRODUCT = exports.CONTRACT_DATA_PRODUCT_DOMAIN_DATA_PRODUCTS + "/:domainId";
exports.CONTRACT_DATA_PRODUCT_RENAME = exports.CONTRACT_DATA_PRODUCT + "/rename";
exports.CONTRACT_DATA_PRODUCT_SEGMENTS = exports.CONTRACT_DATA_PRODUCT + "/segments";
exports.CONTRACT_DATA_PRODUCT_SEGMENT = exports.CONTRACT_DATA_PRODUCT_SEGMENTS + "/:segmentId";
exports.CONTRACT_DATA_PRODUCT_SEGMENT_RENAME = exports.CONTRACT_DATA_PRODUCT_SEGMENT + "/rename";
exports.CONTRACT_DATA_PRODUCT_DOMAIN_SEGMENTS = exports.CONTRACT_DATA_PRODUCT_SEGMENT + "/domainsegments";
exports.CONTRACT_DATA_PRODUCT_DOMAIN_SEGMENT = exports.CONTRACT_DATA_PRODUCT_DOMAIN_SEGMENTS + "/:domainId";
exports.CONTRACT_DATA_PRODUCT_DOMAIN_SEGMENT_CLONE = exports.CONTRACT_DATA_PRODUCT_DOMAIN_SEGMENT + "/clone";
exports.CONTRACT_DATA_PRODUCT_DOMAIN_SEGMENT_RENAME = exports.CONTRACT_DATA_PRODUCT_DOMAIN_SEGMENT + "/rename";
exports.CONTRACT_DATA_PRODUCT_DOMAIN_SEGMENT_SYNC = exports.CONTRACT_DATA_PRODUCT_DOMAIN_SEGMENT + "/synchronizeClients";
exports.CONTRACT_DATA_PRODUCT_DOMAIN_SEGMENT_LOG = exports.CONTRACT_DATA_PRODUCT_DOMAIN_SEGMENT + "/activityLog";
exports.CONTRACT_DATA_PRODUCT_DOMAIN_SEGMENT_CLIENTS = exports.CONTRACT_DATA_PRODUCT_DOMAIN_SEGMENT + "/clients";
exports.CONTRACT_DATA_PRODUCT_DOMAIN_SEGMENT_CLIENT = exports.CONTRACT_DATA_PRODUCT_DOMAIN_SEGMENT_CLIENTS + "/:clientId";
exports.CONTRACT_DATA_PRODUCT_DOMAIN_SEGMENT_CLIENT_USERS = exports.CONTRACT_DATA_PRODUCT_DOMAIN_SEGMENT_CLIENT + "/project/users";
exports.CONTRACT_DOMAINS = exports.CONTRACT + "/domains";
exports.CONTRACT_DOMAIN = exports.CONTRACT_DOMAINS + "/:domainId";
exports.CONTRACT_DOMAIN_USERS = exports.CONTRACT_DOMAIN + "/users";
exports.CONTRACT_DOMAIN_PROJECTS = exports.CONTRACT_DOMAIN + "/projects";
exports.CONTRACT_DOMAIN_PROJECT = exports.CONTRACT_DOMAIN_PROJECTS + "/:projectId";
exports.CONTRACT_USERS = exports.CONTRACT + "/users";
exports.USER_CONTRACTS = exports.ROOT + "/users/:userId/contracts";
exports.DEPLOY_SEGMENT = exports.CONTRACT_DOMAIN + "/dataProducts/:dataProductId/segments/:segmentId/deploy";
// parse params in route string accoring to template
// returns params as plain object
exports.parse = function (route, template) {
    var parsedRoute = "";
    if (route.startsWith("http")) {
        var routeMatch = route.match(/^(https?:)\/\/(([^:/?#]*)(?::([0-9]+))?)([/]{0,1}[^?#]*)(\?[^#]*|)(#.*|)$/);
        parsedRoute = routeMatch ? routeMatch[5] : "";
    }
    else {
        parsedRoute = route;
    }
    var values = parsedRoute.split("/");
    var views = template.split("/");
    return views.reduce(function (result, view, idx) {
        var _a;
        if (view[0] === ":") {
            return __assign({}, result, (_a = {}, _a[view.substr(1)] = values[idx], _a));
        }
        return result;
    }, {});
};
// interpolates specified parameters from params into
// the specified route string and returns the result
exports.interpolate = function (route, params, query) {
    if (query === void 0) { query = null; }
    return route
        .split("/")
        .map(function (view) { return (view[0] === ":" ? params[view.substr(1)] : view); })
        .join("/") + util_1.queryString(query);
};
