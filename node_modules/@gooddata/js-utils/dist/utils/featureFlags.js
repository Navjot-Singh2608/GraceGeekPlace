"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
// (C) 2020 GoodData Corporation
var set_1 = __importDefault(require("lodash/set"));
var cloneDeep = require("lodash/cloneDeep");
var FREE = 'free';
var GROWTH = 'growth';
var PLATFORM_EDITION = 'platformEdition';
var ENABLE_PP_EXPERIENCE = 'enablePixelPerfectExperience';
var PORTAL_LOGO_PAGE = 'portalLogoPage';
var CURRENT_FEATURE_FLAGS_PATH = 'bootstrapResource.current.featureFlags';
function shouldHidePPExperience(featureFlags) {
    var hidePPExperience = featureFlags.hidePixelPerfectExperience;
    var enablePPExperience = featureFlags.enablePixelPerfectExperience;
    var platformEdition = featureFlags.platformEdition;
    var isFreemiumUser = isFreemiumEdition(platformEdition);
    return hidePPExperience || (isFreemiumUser && enablePPExperience !== 'true');
}
exports.shouldHidePPExperience = shouldHidePPExperience;
function isFreemiumEdition(platformEdition) {
    return platformEdition === FREE || platformEdition === GROWTH;
}
exports.isFreemiumEdition = isFreemiumEdition;
// calling from AD/KD/Load/Users Management Page
function updatePrivateFFForPPInBootstrap(bootstrapData, featureFlags) {
    var clonedBootstrapData = cloneDeep(bootstrapData);
    var privateFeatureFlags = [
        PLATFORM_EDITION,
        ENABLE_PP_EXPERIENCE,
        PORTAL_LOGO_PAGE
    ];
    privateFeatureFlags.forEach(function (name) {
        var featureFlag = featureFlags[name];
        var featureFlagValue = featureFlag && featureFlag.value;
        if (featureFlagValue) {
            set_1.default(clonedBootstrapData, CURRENT_FEATURE_FLAGS_PATH + "." + name, featureFlagValue);
        }
    });
    return clonedBootstrapData;
}
exports.updatePrivateFFForPPInBootstrap = updatePrivateFFForPPInBootstrap;
//# sourceMappingURL=featureFlags.js.map