// (C) 2020 GoodData Corporation
import set from 'lodash/set';
import cloneDeep = require('lodash/cloneDeep');
import { IBootstrapData } from './userUtils';

const FREE = 'free';
const GROWTH = 'growth';
const PLATFORM_EDITION = 'platformEdition';
const ENABLE_PP_EXPERIENCE = 'enablePixelPerfectExperience';
const PORTAL_LOGO_PAGE = 'portalLogoPage';
const CURRENT_FEATURE_FLAGS_PATH = 'bootstrapResource.current.featureFlags';

export interface IFeatureFlags {
    [key: string]: number | boolean | string;
}

interface INormalizedFeatureFlagContent {
    value: number | boolean | string;
    source: string;
}

interface INormalizedFeatureFlags {
    [property: string]: INormalizedFeatureFlagContent;
}

export function shouldHidePPExperience(featureFlags: IFeatureFlags): boolean {
    const hidePPExperience = featureFlags.hidePixelPerfectExperience as boolean;
    const enablePPExperience = featureFlags.enablePixelPerfectExperience as string;
    const platformEdition = featureFlags.platformEdition as string;
    const isFreemiumUser = isFreemiumEdition(platformEdition);

    return hidePPExperience || (isFreemiumUser && enablePPExperience !== 'true');
}

export function isFreemiumEdition(platformEdition: string): boolean {
    return platformEdition === FREE || platformEdition === GROWTH;
}

// calling from AD/KD/Load/Users Management Page
export function updatePrivateFFForPPInBootstrap(
    bootstrapData: IBootstrapData,
    featureFlags: INormalizedFeatureFlags
): IBootstrapData {
    const clonedBootstrapData = cloneDeep(bootstrapData);
    const privateFeatureFlags = [
        PLATFORM_EDITION,
        ENABLE_PP_EXPERIENCE,
        PORTAL_LOGO_PAGE
    ];
    privateFeatureFlags.forEach((name: string): void => {
        const featureFlag = featureFlags[name];
        const featureFlagValue = featureFlag && featureFlag.value;
        if (featureFlagValue) {
            set(clonedBootstrapData, `${CURRENT_FEATURE_FLAGS_PATH}.${name}`, featureFlagValue);
        }
    });

    return clonedBootstrapData;
}
