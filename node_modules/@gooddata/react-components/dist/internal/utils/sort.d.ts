import { AFM } from "@gooddata/typings";
import { IExtendedReferencePoint, IVisualizationProperties } from "../interfaces/Visualization";
export declare function getMeasureSortItems(identifier: string, direction: AFM.SortDirection): AFM.SortItem[];
export declare function getDefaultPivotTableSort(afm: AFM.IAfm): AFM.SortItem[];
export declare function createSorts(type: string, afm: AFM.IAfm, resultSpec: AFM.IResultSpec, visualizationProperties: IVisualizationProperties, canSortStackTotalValue?: boolean, enableSortingByTotalGroup?: boolean): AFM.SortItem[];
export declare function getBucketItemIdentifiers(referencePoint: IExtendedReferencePoint): string[];
export declare function getSortIdentifiers(item: AFM.SortItem): string[];
export declare function removeSort(referencePoint: Readonly<IExtendedReferencePoint>): Readonly<IExtendedReferencePoint>;
export declare function removeInvalidSort(referencePoint: Readonly<IExtendedReferencePoint>): Readonly<IExtendedReferencePoint>;
export declare function setSortItems(referencePoint: IExtendedReferencePoint): IExtendedReferencePoint;
