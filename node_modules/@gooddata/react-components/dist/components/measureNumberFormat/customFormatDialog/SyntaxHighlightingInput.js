"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// (C) 2020 GoodData Corporation
var React = require("react");
var react_codemirror2_1 = require("react-codemirror2");
var CodeMirror = require("codemirror");
require("codemirror/lib/codemirror.css");
require("codemirror/addon/mode/simple");
require("codemirror/addon/edit/matchbrackets");
var measureFormatMode = CodeMirror.defineSimpleMode("numberFormat", {
    start: [
        { regex: /"(?:[^\\]|\\.)*?"/, token: "string" },
        { regex: /(?:black|blue|cyan|green|magenta|red|yellow|white)\b/i, token: "keyword" },
        {
            regex: /(backgroundColor|color)(=)([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})/i,
            token: ["variable-4", null, "keyword"],
        },
        {
            regex: /(<|>|=|>=|<=)(-?)(\d*(\.|,)?\d+|Null)/i,
            token: ["variable-5", "variable-5", "variable-5"],
        },
        { regex: /\/\/.*/, token: "comment" },
        { regex: /\/(?:[^\\]|\\.)*?\//, token: "variable-3" },
        { regex: /\/\*/, token: "comment", next: "comment" },
        { regex: /[\{\[\(]/, indent: true, token: "variable-brackets" },
        { regex: /[\}\]\)]/, dedent: true, token: "variable-brackets" },
        { regex: /[a-z$][\w$]*/, token: "variable" },
        { regex: /<</, token: "meta", mode: { spec: "xml", end: />>/ } },
    ],
    comment: [{ regex: /.*?\*\//, token: "comment", next: "start" }, { regex: /.*/, token: "comment" }],
    meta: {
        dontIndentStates: ["comment"],
        lineComment: "//",
    },
});
exports.SyntaxHighlightingInput = function (props) {
    var value = props.value, onChangeHandler = props.onChangeHandler, className = props.className;
    var onChange = function (_editor, _data, value) {
        onChangeHandler(value);
    };
    return (React.createElement(react_codemirror2_1.UnControlled, { className: className, value: value, defineMode: { name: "format", fn: measureFormatMode }, onChange: onChange, autoCursor: false, options: {
            autofocus: false,
            lineWrapping: true,
            matchBrackets: true,
            mode: "numberFormat",
        } }));
};
//# sourceMappingURL=SyntaxHighlightingInput.js.map